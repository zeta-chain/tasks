/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockZRC20,
  MockZRC20Interface,
} from "../../../contracts/shared/MockZRC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "to",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasfee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolFlatFee",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "bytesToAddress",
    outputs: [
      {
        internalType: "address",
        name: "output",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasFeeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasFee_",
        type: "uint256",
      },
    ],
    name: "setGasFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gasFeeAddress_",
        type: "address",
      },
    ],
    name: "setGasFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "to",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawGasFee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002248380380620022488339818101604052810190620000379190620003bc565b818181600390805190602001906200005192919062000277565b5080600490805190602001906200006a92919062000277565b505050620000ac3362000082620000f660201b60201c565b60ff16600a620000939190620005f5565b85620000a0919062000732565b620000ff60201b60201c565b30600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000941565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000172576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000169906200048e565b60405180910390fd5b62000186600083836200026d60201b60201c565b80600260008282546200019a91906200053d565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200024d9190620004b0565b60405180910390a362000269600083836200027260201b60201c565b5050565b505050565b505050565b8280546200028590620007d3565b90600052602060002090601f016020900481019282620002a95760008555620002f5565b82601f10620002c457805160ff1916838001178555620002f5565b82800160010185558215620002f5579182015b82811115620002f4578251825591602001919060010190620002d7565b5b50905062000304919062000308565b5090565b5b808211156200032357600081600090555060010162000309565b5090565b60006200033e6200033884620004f6565b620004cd565b9050828152602081018484840111156200035d576200035c620008d1565b5b6200036a8482856200079d565b509392505050565b600082601f8301126200038a5762000389620008cc565b5b81516200039c84826020860162000327565b91505092915050565b600081519050620003b68162000927565b92915050565b600080600060608486031215620003d857620003d7620008db565b5b6000620003e886828701620003a5565b935050602084015167ffffffffffffffff8111156200040c576200040b620008d6565b5b6200041a8682870162000372565b925050604084015167ffffffffffffffff8111156200043e576200043d620008d6565b5b6200044c8682870162000372565b9150509250925092565b600062000465601f836200052c565b91506200047282620008fe565b602082019050919050565b620004888162000793565b82525050565b60006020820190508181036000830152620004a98162000456565b9050919050565b6000602082019050620004c760008301846200047d565b92915050565b6000620004d9620004ec565b9050620004e7828262000809565b919050565b6000604051905090565b600067ffffffffffffffff8211156200051457620005136200089d565b5b6200051f82620008e0565b9050602081019050919050565b600082825260208201905092915050565b60006200054a8262000793565b9150620005578362000793565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200058f576200058e6200083f565b5b828201905092915050565b6000808291508390505b6001851115620005ec57808604811115620005c457620005c36200083f565b5b6001851615620005d45780820291505b8081029050620005e485620008f1565b9450620005a4565b94509492505050565b6000620006028262000793565b91506200060f8362000793565b92506200063e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000646565b905092915050565b6000826200065857600190506200072b565b816200066857600090506200072b565b81600181146200068157600281146200068c57620006c2565b60019150506200072b565b60ff841115620006a157620006a06200083f565b5b8360020a915084821115620006bb57620006ba6200083f565b5b506200072b565b5060208310610133831016604e8410600b8410161715620006fc5782820a905083811115620006f657620006f56200083f565b5b6200072b565b6200070b84848460016200059a565b925090508184048111156200072557620007246200083f565b5b81810290505b9392505050565b60006200073f8262000793565b91506200074c8362000793565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200078857620007876200083f565b5b828202905092915050565b6000819050919050565b60005b83811015620007bd578082015181840152602081019050620007a0565b83811115620007cd576000848401525b50505050565b60006002820490506001821680620007ec57607f821691505b602082108114156200080357620008026200086e565b5b50919050565b6200081482620008e0565b810181811067ffffffffffffffff821117156200083657620008356200089d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b620009328162000793565b81146200093e57600080fd5b50565b6118f780620009516000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063658612e9116100ad578063a9059cbb11610071578063a9059cbb14610344578063c701262614610374578063d9eeebed146103a4578063dd62ed3e146103c3578063f7d8f616146103f357610121565b8063658612e91461028c578063678edca3146102aa57806370a08231146102c657806395d89b41146102f6578063a457c2d71461031457610121565b80632c27d3ab116100f45780632c27d3ab146101c2578063313ce567146101f257806339509351146102105780633e8a4ee11461024057806347e7ef241461025c57610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806323b872dd14610192575b600080fd5b61012e610411565b60405161013b919061132d565b60405180910390f35b61015e60048036038101906101599190610f99565b6104a3565b60405161016b91906112c4565b60405180910390f35b61017c6104c6565b604051610189919061142f565b60405180910390f35b6101ac60048036038101906101a79190610f46565b6104d0565b6040516101b991906112c4565b60405180910390f35b6101dc60048036038101906101d79190611039565b6104ff565b6040516101e99190611280565b60405180910390f35b6101fa610573565b604051610207919061144a565b60405180910390f35b61022a60048036038101906102259190610f99565b61057c565b60405161023791906112c4565b60405180910390f35b61025a60048036038101906102559190610ed9565b6105b3565b005b61027660048036038101906102719190610f99565b6105f7565b60405161028391906112c4565b60405180910390f35b610294610603565b6040516102a1919061142f565b60405180910390f35b6102c460048036038101906102bf91906110ad565b610609565b005b6102e060048036038101906102db9190610ed9565b610613565b6040516102ed919061142f565b60405180910390f35b6102fe61065b565b60405161030b919061132d565b60405180910390f35b61032e60048036038101906103299190610f99565b6106ed565b60405161033b91906112c4565b60405180910390f35b61035e60048036038101906103599190610f99565b610764565b60405161036b91906112c4565b60405180910390f35b61038e60048036038101906103899190610fd9565b610787565b60405161039b91906112c4565b60405180910390f35b6103ac610825565b6040516103ba92919061129b565b60405180910390f35b6103dd60048036038101906103d89190610f06565b610856565b6040516103ea919061142f565b60405180910390f35b6103fb6108dd565b6040516104089190611280565b60405180910390f35b606060038054610420906115cc565b80601f016020809104026020016040519081016040528092919081815260200182805461044c906115cc565b80156104995780601f1061046e57610100808354040283529160200191610499565b820191906000526020600020905b81548152906001019060200180831161047c57829003601f168201915b5050505050905090565b6000806104ae610903565b90506104bb81858561090b565b600191505092915050565b6000600254905090565b6000806104db610903565b90506104e8858285610ad6565b6104f3858585610b62565b60019150509392505050565b60008085858590858761051291906114cd565b9261051f93929190611492565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905082810151915050949350505050565b60006012905090565b600080610587610903565b90506105a88185856105998589610856565b6105a391906114cd565b61090b565b600191505092915050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001905092915050565b60065481565b8060068190555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461066a906115cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610696906115cc565b80156106e35780601f106106b8576101008083540402835291602001916106e3565b820191906000526020600020905b8154815290600101906020018083116106c657829003601f168201915b5050505050905090565b6000806106f8610903565b905060006107068286610856565b90508381101561074b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107429061140f565b60405180910390fd5b610758828686840361090b565b60019250505092915050565b60008061076f610903565b905061077c818585610b62565b600191505092915050565b60008060208585905010156107a9576107a285856000610dda565b90506107b8565b6107b58585600c610dda565b90505b3373ffffffffffffffffffffffffffffffffffffffff167f9ffbffc04a397460ee1dbe8c9503e098090567d6b7f4b3c02a8617d800b6d95586868660065460006040516108099594939291906112df565b60405180910390a261081b8184610764565b9150509392505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600654915091509091565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561097b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906113ef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e29061136f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ac9919061142f565b60405180910390a3505050565b6000610ae28484610856565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b5c5781811015610b4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b459061138f565b60405180910390fd5b610b5b848484840361090b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc9906113cf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c399061134f565b60405180910390fd5b610c4d838383610e4f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610cd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cca906113af565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dc1919061142f565b60405180910390a3610dd4848484610e54565b50505050565b60008084848490601486610dee91906114cd565b92610dfb93929190611492565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905060148101519150509392505050565b505050565b505050565b600081359050610e6881611893565b92915050565b60008083601f840112610e8457610e83611661565b5b8235905067ffffffffffffffff811115610ea157610ea061165c565b5b602083019150836001820283011115610ebd57610ebc611670565b5b9250929050565b600081359050610ed3816118aa565b92915050565b600060208284031215610eef57610eee61167a565b5b6000610efd84828501610e59565b91505092915050565b60008060408385031215610f1d57610f1c61167a565b5b6000610f2b85828601610e59565b9250506020610f3c85828601610e59565b9150509250929050565b600080600060608486031215610f5f57610f5e61167a565b5b6000610f6d86828701610e59565b9350506020610f7e86828701610e59565b9250506040610f8f86828701610ec4565b9150509250925092565b60008060408385031215610fb057610faf61167a565b5b6000610fbe85828601610e59565b9250506020610fcf85828601610ec4565b9150509250929050565b600080600060408486031215610ff257610ff161167a565b5b600084013567ffffffffffffffff8111156110105761100f611675565b5b61101c86828701610e6e565b9350935050602061102f86828701610ec4565b9150509250925092565b600080600080606085870312156110535761105261167a565b5b600085013567ffffffffffffffff81111561107157611070611675565b5b61107d87828801610e6e565b9450945050602061109087828801610ec4565b92505060406110a187828801610ec4565b91505092959194509250565b6000602082840312156110c3576110c261167a565b5b60006110d184828501610ec4565b91505092915050565b6110e381611523565b82525050565b6110f281611535565b82525050565b60006111048385611470565b935061111183858461158a565b61111a8361167f565b840190509392505050565b61112e81611578565b82525050565b600061113f82611465565b6111498185611481565b9350611159818560208601611599565b6111628161167f565b840191505092915050565b600061117a602383611481565b915061118582611690565b604082019050919050565b600061119d602283611481565b91506111a8826116df565b604082019050919050565b60006111c0601d83611481565b91506111cb8261172e565b602082019050919050565b60006111e3602683611481565b91506111ee82611757565b604082019050919050565b6000611206602583611481565b9150611211826117a6565b604082019050919050565b6000611229602483611481565b9150611234826117f5565b604082019050919050565b600061124c602583611481565b915061125782611844565b604082019050919050565b61126b81611561565b82525050565b61127a8161156b565b82525050565b600060208201905061129560008301846110da565b92915050565b60006040820190506112b060008301856110da565b6112bd6020830184611262565b9392505050565b60006020820190506112d960008301846110e9565b92915050565b600060808201905081810360008301526112fa8187896110f8565b90506113096020830186611262565b6113166040830185611262565b6113236060830184611125565b9695505050505050565b600060208201905081810360008301526113478184611134565b905092915050565b600060208201905081810360008301526113688161116d565b9050919050565b6000602082019050818103600083015261138881611190565b9050919050565b600060208201905081810360008301526113a8816111b3565b9050919050565b600060208201905081810360008301526113c8816111d6565b9050919050565b600060208201905081810360008301526113e8816111f9565b9050919050565b600060208201905081810360008301526114088161121c565b9050919050565b600060208201905081810360008301526114288161123f565b9050919050565b60006020820190506114446000830184611262565b92915050565b600060208201905061145f6000830184611271565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600080858511156114a6576114a561166b565b5b838611156114b7576114b6611666565b5b6001850283019150848603905094509492505050565b60006114d882611561565b91506114e383611561565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611518576115176115fe565b5b828201905092915050565b600061152e82611541565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061158382611561565b9050919050565b82818337600083830152505050565b60005b838110156115b757808201518184015260208101905061159c565b838111156115c6576000848401525b50505050565b600060028204905060018216806115e457607f821691505b602082108114156115f8576115f761162d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61189c81611523565b81146118a757600080fd5b50565b6118b381611561565b81146118be57600080fd5b5056fea2646970667358221220b107e48b8ffbaf954ce9efa3113e9a56d401f9cfcf6393264f615a1b0807f1d564736f6c63430008070033";

type MockZRC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockZRC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockZRC20__factory extends ContractFactory {
  constructor(...args: MockZRC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockZRC20> {
    return super.deploy(
      initialSupply,
      name,
      symbol,
      overrides || {}
    ) as Promise<MockZRC20>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialSupply,
      name,
      symbol,
      overrides || {}
    );
  }
  override attach(address: string): MockZRC20 {
    return super.attach(address) as MockZRC20;
  }
  override connect(signer: Signer): MockZRC20__factory {
    return super.connect(signer) as MockZRC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockZRC20Interface {
    return new utils.Interface(_abi) as MockZRC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockZRC20 {
    return new Contract(address, _abi, signerOrProvider) as MockZRC20;
  }
}
