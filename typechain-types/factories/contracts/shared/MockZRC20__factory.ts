/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockZRC20,
  MockZRC20Interface,
} from "../../../contracts/shared/MockZRC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "to",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasfee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolFlatFee",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "bytesToAddress",
    outputs: [
      {
        internalType: "address",
        name: "output",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasFeeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasFee_",
        type: "uint256",
      },
    ],
    name: "setGasFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gasFeeAddress_",
        type: "address",
      },
    ],
    name: "setGasFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "to",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawGasFee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161232e38038061232e833981810160405281019061003291906103f6565b818181600390816100439190610698565b5080600490816100539190610698565b50505061008d336100686100d660201b60201c565b60ff16600a61007791906108cc565b856100829190610917565b6100df60201b60201c565b30600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050610a34565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361014e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610145906109b6565b60405180910390fd5b6101606000838361024160201b60201c565b806002600082825461017291906109d6565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516102239190610a19565b60405180910390a361023d6000838361024660201b60201c565b5050565b505050565b505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6102728161025f565b811461027d57600080fd5b50565b60008151905061028f81610269565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102e88261029f565b810181811067ffffffffffffffff82111715610307576103066102b0565b5b80604052505050565b600061031a61024b565b905061032682826102df565b919050565b600067ffffffffffffffff821115610346576103456102b0565b5b61034f8261029f565b9050602081019050919050565b60005b8381101561037a57808201518184015260208101905061035f565b60008484015250505050565b60006103996103948461032b565b610310565b9050828152602081018484840111156103b5576103b461029a565b5b6103c084828561035c565b509392505050565b600082601f8301126103dd576103dc610295565b5b81516103ed848260208601610386565b91505092915050565b60008060006060848603121561040f5761040e610255565b5b600061041d86828701610280565b935050602084015167ffffffffffffffff81111561043e5761043d61025a565b5b61044a868287016103c8565b925050604084015167ffffffffffffffff81111561046b5761046a61025a565b5b610477868287016103c8565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806104d357607f821691505b6020821081036104e6576104e561048c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261054e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610511565b6105588683610511565b95508019841693508086168417925050509392505050565b6000819050919050565b600061059561059061058b8461025f565b610570565b61025f565b9050919050565b6000819050919050565b6105af8361057a565b6105c36105bb8261059c565b84845461051e565b825550505050565b600090565b6105d86105cb565b6105e38184846105a6565b505050565b5b81811015610607576105fc6000826105d0565b6001810190506105e9565b5050565b601f82111561064c5761061d816104ec565b61062684610501565b81016020851015610635578190505b61064961064185610501565b8301826105e8565b50505b505050565b600082821c905092915050565b600061066f60001984600802610651565b1980831691505092915050565b6000610688838361065e565b9150826002028217905092915050565b6106a182610481565b67ffffffffffffffff8111156106ba576106b96102b0565b5b6106c482546104bb565b6106cf82828561060b565b600060209050601f83116001811461070257600084156106f0578287015190505b6106fa858261067c565b865550610762565b601f198416610710866104ec565b60005b8281101561073857848901518255600182019150602085019450602081019050610713565b868310156107555784890151610751601f89168261065e565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156107f0578086048111156107cc576107cb61076a565b5b60018516156107db5780820291505b80810290506107e985610799565b94506107b0565b94509492505050565b60008261080957600190506108c5565b8161081757600090506108c5565b816001811461082d576002811461083757610866565b60019150506108c5565b60ff8411156108495761084861076a565b5b8360020a9150848211156108605761085f61076a565b5b506108c5565b5060208310610133831016604e8410600b841016171561089b5782820a9050838111156108965761089561076a565b5b6108c5565b6108a884848460016107a6565b925090508184048111156108bf576108be61076a565b5b81810290505b9392505050565b60006108d78261025f565b91506108e28361025f565b925061090f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846107f9565b905092915050565b60006109228261025f565b915061092d8361025f565b925082820261093b8161025f565b915082820484148315176109525761095161076a565b5b5092915050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006109a0601f83610959565b91506109ab8261096a565b602082019050919050565b600060208201905081810360008301526109cf81610993565b9050919050565b60006109e18261025f565b91506109ec8361025f565b9250828201905080821115610a0457610a0361076a565b5b92915050565b610a138161025f565b82525050565b6000602082019050610a2e6000830184610a0a565b92915050565b6118eb80610a436000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063658612e9116100ad578063a9059cbb11610071578063a9059cbb14610344578063c701262614610374578063d9eeebed146103a4578063dd62ed3e146103c3578063f7d8f616146103f357610121565b8063658612e91461028c578063678edca3146102aa57806370a08231146102c657806395d89b41146102f6578063a457c2d71461031457610121565b80632c27d3ab116100f45780632c27d3ab146101c2578063313ce567146101f257806339509351146102105780633e8a4ee11461024057806347e7ef241461025c57610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806323b872dd14610192575b600080fd5b61012e610411565b60405161013b9190610ee5565b60405180910390f35b61015e60048036038101906101599190610fa5565b6104a3565b60405161016b9190611000565b60405180910390f35b61017c6104c6565b604051610189919061102a565b60405180910390f35b6101ac60048036038101906101a79190611045565b6104d0565b6040516101b99190611000565b60405180910390f35b6101dc60048036038101906101d791906110fd565b6104ff565b6040516101e99190611180565b60405180910390f35b6101fa610573565b60405161020791906111b7565b60405180910390f35b61022a60048036038101906102259190610fa5565b61057c565b6040516102379190611000565b60405180910390f35b61025a600480360381019061025591906111d2565b6105b3565b005b61027660048036038101906102719190610fa5565b6105f7565b6040516102839190611000565b60405180910390f35b610294610603565b6040516102a1919061102a565b60405180910390f35b6102c460048036038101906102bf91906111ff565b610609565b005b6102e060048036038101906102db91906111d2565b610613565b6040516102ed919061102a565b60405180910390f35b6102fe61065b565b60405161030b9190610ee5565b60405180910390f35b61032e60048036038101906103299190610fa5565b6106ed565b60405161033b9190611000565b60405180910390f35b61035e60048036038101906103599190610fa5565b610764565b60405161036b9190611000565b60405180910390f35b61038e6004803603810190610389919061122c565b610787565b60405161039b9190611000565b60405180910390f35b6103ac610825565b6040516103ba92919061128c565b60405180910390f35b6103dd60048036038101906103d891906112b5565b610856565b6040516103ea919061102a565b60405180910390f35b6103fb6108dd565b6040516104089190611180565b60405180910390f35b60606003805461042090611324565b80601f016020809104026020016040519081016040528092919081815260200182805461044c90611324565b80156104995780601f1061046e57610100808354040283529160200191610499565b820191906000526020600020905b81548152906001019060200180831161047c57829003601f168201915b5050505050905090565b6000806104ae610903565b90506104bb81858561090b565b600191505092915050565b6000600254905090565b6000806104db610903565b90506104e8858285610ad4565b6104f3858585610b60565b60019150509392505050565b6000808585859085876105129190611384565b9261051f939291906113c2565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905082810151915050949350505050565b60006012905090565b600080610587610903565b90506105a88185856105998589610856565b6105a39190611384565b61090b565b600191505092915050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001905092915050565b60065481565b8060068190555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461066a90611324565b80601f016020809104026020016040519081016040528092919081815260200182805461069690611324565b80156106e35780601f106106b8576101008083540402835291602001916106e3565b820191906000526020600020905b8154815290600101906020018083116106c657829003601f168201915b5050505050905090565b6000806106f8610903565b905060006107068286610856565b90508381101561074b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107429061146f565b60405180910390fd5b610758828686840361090b565b60019250505092915050565b60008061076f610903565b905061077c818585610b60565b600191505092915050565b60008060208585905010156107a9576107a285856000610dd6565b90506107b8565b6107b58585600c610dd6565b90505b3373ffffffffffffffffffffffffffffffffffffffff167f9ffbffc04a397460ee1dbe8c9503e098090567d6b7f4b3c02a8617d800b6d9558686866006546000604051610809959493929190611521565b60405180910390a261081b8184610764565b9150509392505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600654915091509091565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361097a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610971906115e1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e090611673565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ac7919061102a565b60405180910390a3505050565b6000610ae08484610856565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b5a5781811015610b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b43906116df565b60405180910390fd5b610b59848484840361090b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc690611771565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3590611803565b60405180910390fd5b610c49838383610e4b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ccf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc690611895565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dbd919061102a565b60405180910390a3610dd0848484610e50565b50505050565b60008084848490601486610dea9190611384565b92610df7939291906113c2565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905060148101519150509392505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e8f578082015181840152602081019050610e74565b60008484015250505050565b6000601f19601f8301169050919050565b6000610eb782610e55565b610ec18185610e60565b9350610ed1818560208601610e71565b610eda81610e9b565b840191505092915050565b60006020820190508181036000830152610eff8184610eac565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3c82610f11565b9050919050565b610f4c81610f31565b8114610f5757600080fd5b50565b600081359050610f6981610f43565b92915050565b6000819050919050565b610f8281610f6f565b8114610f8d57600080fd5b50565b600081359050610f9f81610f79565b92915050565b60008060408385031215610fbc57610fbb610f07565b5b6000610fca85828601610f5a565b9250506020610fdb85828601610f90565b9150509250929050565b60008115159050919050565b610ffa81610fe5565b82525050565b60006020820190506110156000830184610ff1565b92915050565b61102481610f6f565b82525050565b600060208201905061103f600083018461101b565b92915050565b60008060006060848603121561105e5761105d610f07565b5b600061106c86828701610f5a565b935050602061107d86828701610f5a565b925050604061108e86828701610f90565b9150509250925092565b600080fd5b600080fd5b600080fd5b60008083601f8401126110bd576110bc611098565b5b8235905067ffffffffffffffff8111156110da576110d961109d565b5b6020830191508360018202830111156110f6576110f56110a2565b5b9250929050565b6000806000806060858703121561111757611116610f07565b5b600085013567ffffffffffffffff81111561113557611134610f0c565b5b611141878288016110a7565b9450945050602061115487828801610f90565b925050604061116587828801610f90565b91505092959194509250565b61117a81610f31565b82525050565b60006020820190506111956000830184611171565b92915050565b600060ff82169050919050565b6111b18161119b565b82525050565b60006020820190506111cc60008301846111a8565b92915050565b6000602082840312156111e8576111e7610f07565b5b60006111f684828501610f5a565b91505092915050565b60006020828403121561121557611214610f07565b5b600061122384828501610f90565b91505092915050565b60008060006040848603121561124557611244610f07565b5b600084013567ffffffffffffffff81111561126357611262610f0c565b5b61126f868287016110a7565b9350935050602061128286828701610f90565b9150509250925092565b60006040820190506112a16000830185611171565b6112ae602083018461101b565b9392505050565b600080604083850312156112cc576112cb610f07565b5b60006112da85828601610f5a565b92505060206112eb85828601610f5a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061133c57607f821691505b60208210810361134f5761134e6112f5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061138f82610f6f565b915061139a83610f6f565b92508282019050808211156113b2576113b1611355565b5b92915050565b600080fd5b600080fd5b600080858511156113d6576113d56113b8565b5b838611156113e7576113e66113bd565b5b6001850283019150848603905094509492505050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611459602583610e60565b9150611464826113fd565b604082019050919050565b600060208201905081810360008301526114888161144c565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b60006114bb838561148f565b93506114c88385846114a0565b6114d183610e9b565b840190509392505050565b6000819050919050565b6000819050919050565b600061150b611506611501846114dc565b6114e6565b610f6f565b9050919050565b61151b816114f0565b82525050565b6000608082019050818103600083015261153c8187896114af565b905061154b602083018661101b565b611558604083018561101b565b6115656060830184611512565b9695505050505050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006115cb602483610e60565b91506115d68261156f565b604082019050919050565b600060208201905081810360008301526115fa816115be565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061165d602283610e60565b915061166882611601565b604082019050919050565b6000602082019050818103600083015261168c81611650565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006116c9601d83610e60565b91506116d482611693565b602082019050919050565b600060208201905081810360008301526116f8816116bc565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061175b602583610e60565b9150611766826116ff565b604082019050919050565b6000602082019050818103600083015261178a8161174e565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006117ed602383610e60565b91506117f882611791565b604082019050919050565b6000602082019050818103600083015261181c816117e0565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061187f602683610e60565b915061188a82611823565b604082019050919050565b600060208201905081810360008301526118ae81611872565b905091905056fea2646970667358221220c86adff1e41c65306dd69ccdaa8bb5d5bfaa0708fc0084b93b9871b1e0ac601464736f6c634300081a0033";

type MockZRC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockZRC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockZRC20__factory extends ContractFactory {
  constructor(...args: MockZRC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockZRC20> {
    return super.deploy(
      initialSupply,
      name,
      symbol,
      overrides || {}
    ) as Promise<MockZRC20>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialSupply,
      name,
      symbol,
      overrides || {}
    );
  }
  override attach(address: string): MockZRC20 {
    return super.attach(address) as MockZRC20;
  }
  override connect(signer: Signer): MockZRC20__factory {
    return super.connect(signer) as MockZRC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockZRC20Interface {
    return new utils.Interface(_abi) as MockZRC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockZRC20 {
    return new Contract(address, _abi, signerOrProvider) as MockZRC20;
  }
}
