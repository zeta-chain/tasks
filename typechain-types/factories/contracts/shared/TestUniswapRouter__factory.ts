/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestUniswapRouter,
  TestUniswapRouterInterface,
} from "../../../contracts/shared/TestUniswapRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AdditionsOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "Expired",
    type: "error",
  },
  {
    inputs: [],
    name: "IdenticalAddresses",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientInputAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientOutputAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPath",
    type: "error",
  },
  {
    inputs: [],
    name: "MultiplicationsOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "SubtractionsUnderflow",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTokenDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161334738038061334783398181016040528101906100329190610104565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050610144565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d1826100a6565b9050919050565b6100e1816100c6565b81146100ec57600080fd5b50565b6000815190506100fe816100d8565b92915050565b6000806040838503121561011b5761011a6100a1565b5b6000610129858286016100ef565b925050602061013a858286016100ef565b9150509250929050565b60805160a05161314c6101fb6000396000818160cd015281816104600152818161049e015281816109ec01528181610e3701528181610e9001528181610ec40152610f4501526000818161055a015281816105ca015281816106c60152818161080c015281816108fc01528181610a6901528181610c6f01528181610c9801528181610d2301528181610e6e01528181611992015281816119e601528181611dc301528181611e7c0152611f24015261314c6000f3fe6080604052600436106100c65760003560e01c8063ad5c46481161007f578063c45a015511610059578063c45a015514610343578063d06ca61f1461036e578063e8e33700146103ab578063f305d719146103ea57610129565b8063ad5c46481461029d578063ad615dec146102c8578063baa2abde1461030557610129565b806302751cec1461012e578063054d50d41461016c5780631f00ca74146101a957806338ed1739146101e657806385f8c259146102235780638803dbee1461026057610129565b36610129577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012757610126612307565b5b005b600080fd5b34801561013a57600080fd5b50610155600480360381019061015091906123de565b61041c565b60405161016392919061247a565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906124a3565b61053d565b6040516101a091906124f6565b60405180910390f35b3480156101b557600080fd5b506101d060048036038101906101cb919061266a565b610553565b6040516101dd9190612784565b60405180910390f35b3480156101f257600080fd5b5061020d60048036038101906102089190612801565b610588565b60405161021a9190612784565b60405180910390f35b34801561022f57600080fd5b5061024a600480360381019061024591906124a3565b6107b4565b60405161025791906124f6565b60405180910390f35b34801561026c57600080fd5b5061028760048036038101906102829190612801565b6107ca565b6040516102949190612784565b60405180910390f35b3480156102a957600080fd5b506102b26109ea565b6040516102bf91906128aa565b60405180910390f35b3480156102d457600080fd5b506102ef60048036038101906102ea91906124a3565b610a0e565b6040516102fc91906124f6565b60405180910390f35b34801561031157600080fd5b5061032c600480360381019061032791906128c5565b610a24565b60405161033a92919061247a565b60405180910390f35b34801561034f57600080fd5b50610358610c6d565b60405161036591906128aa565b60405180910390f35b34801561037a57600080fd5b506103956004803603810190610390919061266a565b610c91565b6040516103a29190612784565b60405180910390f35b3480156103b757600080fd5b506103d260048036038101906103cd9190612967565b610cc6565b6040516103e193929190612a1d565b60405180910390f35b61040460048036038101906103ff91906123de565b610df1565b60405161041393929190612a1d565b60405180910390f35b600080824281101561045a576040517f203d82d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610489897f00000000000000000000000000000000000000000000000000000000000000008a8a8a308a610a24565b809350819450505061049c898685611098565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff1660e01b81526004016104f591906124f6565b600060405180830381600087803b15801561050f57600080fd5b505af1158015610523573d6000803e3d6000fd5b5050505061053185836111ce565b50965096945050505050565b600061054a8484846112ce565b90509392505050565b60606105807f000000000000000000000000000000000000000000000000000000000000000084846113c2565b905092915050565b606081428110156105c5576040517f203d82d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106317f000000000000000000000000000000000000000000000000000000000000000089888880806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050611554565b91508682600184516106439190612a83565b8151811061065457610653612ab7565b5b60200260200101511015610694576040517f42301c2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61075d868660008181106106ab576106aa612ab7565b5b90506020020160208101906106c09190612ae6565b3361073c7f00000000000000000000000000000000000000000000000000000000000000008a8a60008181106106f9576106f8612ab7565b5b905060200201602081019061070e9190612ae6565b8b8b600181811061072257610721612ab7565b5b90506020020160208101906107379190612ae6565b6116d0565b856000815181106107505761074f612ab7565b5b6020026020010151611757565b6107a982878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505086611890565b509695505050505050565b60006107c1848484611ae3565b90509392505050565b60608142811015610807576040517f203d82d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108737f000000000000000000000000000000000000000000000000000000000000000089888880806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506113c2565b9150868260008151811061088a57610889612ab7565b5b602002602001015111156108ca576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610993868660008181106108e1576108e0612ab7565b5b90506020020160208101906108f69190612ae6565b336109727f00000000000000000000000000000000000000000000000000000000000000008a8a600081811061092f5761092e612ab7565b5b90506020020160208101906109449190612ae6565b8b8b600181811061095857610957612ab7565b5b905060200201602081019061096d9190612ae6565b6116d0565b8560008151811061098657610985612ab7565b5b6020026020010151611757565b6109df82878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505086611890565b509695505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610a1b848484611be4565b90509392505050565b6000808242811015610a62576040517f203d82d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a8f7f00000000000000000000000000000000000000000000000000000000000000008c8c6116d0565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd33838c6040518463ffffffff1660e01b8152600401610ace93929190612b13565b6020604051808303816000875af1158015610aed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b119190612b82565b506000808273ffffffffffffffffffffffffffffffffffffffff166389afcb44896040518263ffffffff1660e01b8152600401610b4e91906128aa565b60408051808303816000875af1158015610b6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b909190612bc4565b915091506000610ba08e8e611c8c565b5090508073ffffffffffffffffffffffffffffffffffffffff168e73ffffffffffffffffffffffffffffffffffffffff1614610bdd578183610be0565b82825b80975081985050508a871015610c22576040517f8dc525d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b89861015610c5c576040517fef71d09100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505097509795505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060610cbe7f00000000000000000000000000000000000000000000000000000000000000008484611554565b905092915050565b60008060008342811015610d06576040517f203d82d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d148c8c8c8c8c8c611da6565b80945081955050506000610d497f00000000000000000000000000000000000000000000000000000000000000008e8e6116d0565b9050610d578d338388611757565b610d638c338387611757565b8073ffffffffffffffffffffffffffffffffffffffff16636a627842886040518263ffffffff1660e01b8152600401610d9c91906128aa565b6020604051808303816000875af1158015610dbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddf9190612c04565b92505050985098509895505050505050565b60008060008342811015610e31576040517f203d82d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e5f8a7f00000000000000000000000000000000000000000000000000000000000000008b348c8c611da6565b80945081955050506000610eb47f00000000000000000000000000000000000000000000000000000000000000008c7f00000000000000000000000000000000000000000000000000000000000000006116d0565b9050610ec28b338388611757565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b158015610f2a57600080fd5b505af1158015610f3e573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82866040518363ffffffff1660e01b8152600401610f9e929190612c31565b6020604051808303816000875af1158015610fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe19190612b82565b610fee57610fed612307565b5b8073ffffffffffffffffffffffffffffffffffffffff16636a627842886040518263ffffffff1660e01b815260040161102791906128aa565b6020604051808303816000875af1158015611046573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106a9190612c04565b92508334111561108a576110893385346110849190612a83565b6111ce565b5b505096509650969350505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016110ca929190612c31565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516111189190612ccb565b6000604051808303816000865af19150503d8060008114611155576040519150601f19603f3d011682016040523d82523d6000602084013e61115a565b606091505b509150915081801561118857506000815114806111875750808060200190518101906111869190612b82565b5b5b6111c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111be90612d3f565b60405180910390fd5b5050505050565b60008273ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff81111561120357611202612527565b5b6040519080825280601f01601f1916602001820160405280156112355781602001600182028036833780820191505090505b506040516112439190612ccb565b60006040518083038185875af1925050503d8060008114611280576040519150601f19603f3d011682016040523d82523d6000602084013e611285565b606091505b50509050806112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c090612dd1565b60405180910390fd5b505050565b6000808403611309576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008314806113185750600082145b1561134f576040517fbb55fd2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006113666103e58661204690919063ffffffff16565b9050600061137d848361204690919063ffffffff16565b905060006113a88361139a6103e88961204690919063ffffffff16565b6120a290919063ffffffff16565b905080826113b69190612e20565b93505050509392505050565b6060600282511015611400576040517f20db826700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815167ffffffffffffffff81111561141b5761141a612527565b5b6040519080825280602002602001820160405280156114495781602001602082028036833780820191505090505b50905082816001835161145c9190612a83565b8151811061146d5761146c612ab7565b5b6020026020010181815250506000600183516114899190612a83565b90505b600081111561154c576000806114e387866001866114aa9190612a83565b815181106114bb576114ba612ab7565b5b60200260200101518786815181106114d6576114d5612ab7565b5b60200260200101516120fe565b9150915061150c8484815181106114fd576114fc612ab7565b5b60200260200101518383611ae3565b8460018561151a9190612a83565b8151811061152b5761152a612ab7565b5b6020026020010181815250505050808061154490612e51565b91505061148c565b509392505050565b6060600282511015611592576040517f20db826700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815167ffffffffffffffff8111156115ad576115ac612527565b5b6040519080825280602002602001820160405280156115db5781602001602082028036833780820191505090505b50905082816000815181106115f3576115f2612ab7565b5b60200260200101818152505060005b600183516116109190612a83565b8110156116c8576000806116658786858151811061163157611630612ab7565b5b6020026020010151876001876116479190612e7a565b8151811061165857611657612ab7565b5b60200260200101516120fe565b9150915061168e84848151811061167f5761167e612ab7565b5b602002602001015183836112ce565b8460018561169c9190612e7a565b815181106116ad576116ac612ab7565b5b60200260200101818152505050508080600101915050611602565b509392505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663e6a4390584846040518363ffffffff1660e01b815260040161170d929190612eae565b602060405180830381865afa15801561172a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174e9190612eec565b90509392505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161178b93929190612b13565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516117d99190612ccb565b6000604051808303816000865af19150503d8060008114611816576040519150601f19603f3d011682016040523d82523d6000602084013e61181b565b606091505b509150915081801561184957506000815114806118485750808060200190518101906118479190612b82565b5b5b611888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187f90612f8b565b60405180910390fd5b505050505050565b60005b600183516118a19190612a83565b811015611add576000808483815181106118be576118bd612ab7565b5b6020026020010151856001856118d49190612e7a565b815181106118e5576118e4612ab7565b5b60200260200101519150915060006118fd8383611c8c565b5090506000876001866119109190612e7a565b8151811061192157611920612ab7565b5b602002602001015190506000808373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146119695782600061196d565b6000835b91509150600060028a516119819190612a83565b881061198d57886119df565b6119de7f0000000000000000000000000000000000000000000000000000000000000000878c60028c6119c09190612e7a565b815181106119d1576119d0612ab7565b5b60200260200101516116d0565b5b9050611a0c7f000000000000000000000000000000000000000000000000000000000000000088886116d0565b73ffffffffffffffffffffffffffffffffffffffff1663022c0d9f848484600067ffffffffffffffff811115611a4557611a44612527565b5b6040519080825280601f01601f191660200182016040528015611a775781602001600182028036833780820191505090505b506040518563ffffffff1660e01b8152600401611a979493929190612ff5565b600060405180830381600087803b158015611ab157600080fd5b505af1158015611ac5573d6000803e3d6000fd5b50505050505050505050508080600101915050611893565b50505050565b6000808403611b1e576040517f42301c2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000831480611b2d5750600082145b15611b64576040517fbb55fd2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611b8d6103e8611b7f878761204690919063ffffffff16565b61204690919063ffffffff16565b90506000611bb86103e5611baa888761220190919063ffffffff16565b61204690919063ffffffff16565b9050611bd960018284611bcb9190612e20565b6120a290919063ffffffff16565b925050509392505050565b6000808403611c1f576040517f5945ea5600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000831480611c2e5750600082145b15611c65576040517fbb55fd2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82611c79838661204690919063ffffffff16565b611c839190612e20565b90509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611cf4576040517fbd969eb000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610611d2e578284611d31565b83835b8092508193505050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d9f576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9250929050565b600080600073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e6a439058a8a6040518363ffffffff1660e01b8152600401611e1c929190612eae565b602060405180830381865afa158015611e39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e5d9190612eec565b73ffffffffffffffffffffffffffffffffffffffff1603611f1c5760007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c9c653968a8a6040518363ffffffff1660e01b8152600401611ed5929190612eae565b6020604051808303816000875af1158015611ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f189190612eec565b9050505b600080611f4a7f00000000000000000000000000000000000000000000000000000000000000008b8b6120fe565b91509150600082148015611f5e5750600081145b15611f725787878094508195505050612039565b6000611f7f898484611be4565b9050878111611fd15785811015611fc2576040517fef71d09100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88818095508196505050612037565b6000611fde898486611be4565b905089811115611ff157611ff0612307565b5b8781101561202b576040517f8dc525d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80898096508197505050505b505b5050965096945050505050565b60008061205c838561225d90919063ffffffff16565b80935081925050508061209b576040517f5797276a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5092915050565b6000806120b883856122b090919063ffffffff16565b8093508192505050806120f7576040517fa259879500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5092915050565b600080600061210d8585611c8c565b50905060008061211e8888886116d0565b73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015612168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061218c91906130c3565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508273ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146121eb5780826121ee565b81815b8095508196505050505050935093915050565b60008061221783856122df90919063ffffffff16565b809350819250505080612256576040517f682e7c7c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5092915050565b600080600084036122755760016000915091506122a9565b600083850290508385828161228d5761228c612df1565b5b04146122a05760008092509250506122a9565b60018192509250505b9250929050565b60008060008385019050848110156122cf5760008092509250506122d8565b60018192509250505b9250929050565b600080838311156122f65760008091509150612300565b6001838503915091505b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006123758261234a565b9050919050565b6123858161236a565b811461239057600080fd5b50565b6000813590506123a28161237c565b92915050565b6000819050919050565b6123bb816123a8565b81146123c657600080fd5b50565b6000813590506123d8816123b2565b92915050565b60008060008060008060c087890312156123fb576123fa612340565b5b600061240989828a01612393565b965050602061241a89828a016123c9565b955050604061242b89828a016123c9565b945050606061243c89828a016123c9565b935050608061244d89828a01612393565b92505060a061245e89828a016123c9565b9150509295509295509295565b612474816123a8565b82525050565b600060408201905061248f600083018561246b565b61249c602083018461246b565b9392505050565b6000806000606084860312156124bc576124bb612340565b5b60006124ca868287016123c9565b93505060206124db868287016123c9565b92505060406124ec868287016123c9565b9150509250925092565b600060208201905061250b600083018461246b565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61255f82612516565b810181811067ffffffffffffffff8211171561257e5761257d612527565b5b80604052505050565b6000612591612336565b905061259d8282612556565b919050565b600067ffffffffffffffff8211156125bd576125bc612527565b5b602082029050602081019050919050565b600080fd5b60006125e66125e1846125a2565b612587565b90508083825260208201905060208402830185811115612609576126086125ce565b5b835b81811015612632578061261e8882612393565b84526020840193505060208101905061260b565b5050509392505050565b600082601f83011261265157612650612511565b5b81356126618482602086016125d3565b91505092915050565b6000806040838503121561268157612680612340565b5b600061268f858286016123c9565b925050602083013567ffffffffffffffff8111156126b0576126af612345565b5b6126bc8582860161263c565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6126fb816123a8565b82525050565b600061270d83836126f2565b60208301905092915050565b6000602082019050919050565b6000612731826126c6565b61273b81856126d1565b9350612746836126e2565b8060005b8381101561277757815161275e8882612701565b975061276983612719565b92505060018101905061274a565b5085935050505092915050565b6000602082019050818103600083015261279e8184612726565b905092915050565b600080fd5b60008083601f8401126127c1576127c0612511565b5b8235905067ffffffffffffffff8111156127de576127dd6127a6565b5b6020830191508360208202830111156127fa576127f96125ce565b5b9250929050565b60008060008060008060a0878903121561281e5761281d612340565b5b600061282c89828a016123c9565b965050602061283d89828a016123c9565b955050604087013567ffffffffffffffff81111561285e5761285d612345565b5b61286a89828a016127ab565b9450945050606061287d89828a01612393565b925050608061288e89828a016123c9565b9150509295509295509295565b6128a48161236a565b82525050565b60006020820190506128bf600083018461289b565b92915050565b600080600080600080600060e0888a0312156128e4576128e3612340565b5b60006128f28a828b01612393565b97505060206129038a828b01612393565b96505060406129148a828b016123c9565b95505060606129258a828b016123c9565b94505060806129368a828b016123c9565b93505060a06129478a828b01612393565b92505060c06129588a828b016123c9565b91505092959891949750929550565b600080600080600080600080610100898b03121561298857612987612340565b5b60006129968b828c01612393565b98505060206129a78b828c01612393565b97505060406129b88b828c016123c9565b96505060606129c98b828c016123c9565b95505060806129da8b828c016123c9565b94505060a06129eb8b828c016123c9565b93505060c06129fc8b828c01612393565b92505060e0612a0d8b828c016123c9565b9150509295985092959890939650565b6000606082019050612a32600083018661246b565b612a3f602083018561246b565b612a4c604083018461246b565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a8e826123a8565b9150612a99836123a8565b9250828203905081811115612ab157612ab0612a54565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215612afc57612afb612340565b5b6000612b0a84828501612393565b91505092915050565b6000606082019050612b28600083018661289b565b612b35602083018561289b565b612b42604083018461246b565b949350505050565b60008115159050919050565b612b5f81612b4a565b8114612b6a57600080fd5b50565b600081519050612b7c81612b56565b92915050565b600060208284031215612b9857612b97612340565b5b6000612ba684828501612b6d565b91505092915050565b600081519050612bbe816123b2565b92915050565b60008060408385031215612bdb57612bda612340565b5b6000612be985828601612baf565b9250506020612bfa85828601612baf565b9150509250929050565b600060208284031215612c1a57612c19612340565b5b6000612c2884828501612baf565b91505092915050565b6000604082019050612c46600083018561289b565b612c53602083018461246b565b9392505050565b600081519050919050565b600081905092915050565b60005b83811015612c8e578082015181840152602081019050612c73565b60008484015250505050565b6000612ca582612c5a565b612caf8185612c65565b9350612cbf818560208601612c70565b80840191505092915050565b6000612cd78284612c9a565b915081905092915050565b600082825260208201905092915050565b7f5472616e7366657248656c7065723a205452414e534645525f4641494c454400600082015250565b6000612d29601f83612ce2565b9150612d3482612cf3565b602082019050919050565b60006020820190508181036000830152612d5881612d1c565b9050919050565b7f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960008201527f4c45440000000000000000000000000000000000000000000000000000000000602082015250565b6000612dbb602383612ce2565b9150612dc682612d5f565b604082019050919050565b60006020820190508181036000830152612dea81612dae565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612e2b826123a8565b9150612e36836123a8565b925082612e4657612e45612df1565b5b828204905092915050565b6000612e5c826123a8565b915060008203612e6f57612e6e612a54565b5b600182039050919050565b6000612e85826123a8565b9150612e90836123a8565b9250828201905080821115612ea857612ea7612a54565b5b92915050565b6000604082019050612ec3600083018561289b565b612ed0602083018461289b565b9392505050565b600081519050612ee68161237c565b92915050565b600060208284031215612f0257612f01612340565b5b6000612f1084828501612ed7565b91505092915050565b7f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f464160008201527f494c454400000000000000000000000000000000000000000000000000000000602082015250565b6000612f75602483612ce2565b9150612f8082612f19565b604082019050919050565b60006020820190508181036000830152612fa481612f68565b9050919050565b600082825260208201905092915050565b6000612fc782612c5a565b612fd18185612fab565b9350612fe1818560208601612c70565b612fea81612516565b840191505092915050565b600060808201905061300a600083018761246b565b613017602083018661246b565b613024604083018561289b565b81810360608301526130368184612fbc565b905095945050505050565b60006dffffffffffffffffffffffffffff82169050919050565b61306481613041565b811461306f57600080fd5b50565b6000815190506130818161305b565b92915050565b600063ffffffff82169050919050565b6130a081613087565b81146130ab57600080fd5b50565b6000815190506130bd81613097565b92915050565b6000806000606084860312156130dc576130db612340565b5b60006130ea86828701613072565b93505060206130fb86828701613072565b925050604061310c868287016130ae565b915050925092509256fea26469706673582212200fbb59fccb67e1bd3e617c6cbc36a76d5a16d1eaf37e3c69011d8fda8251aad264736f6c634300081a0033";

type TestUniswapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniswapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniswapRouter__factory extends ContractFactory {
  constructor(...args: TestUniswapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _WETH: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestUniswapRouter> {
    return super.deploy(
      _factory,
      _WETH,
      overrides || {}
    ) as Promise<TestUniswapRouter>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _WETH: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, _WETH, overrides || {});
  }
  override attach(address: string): TestUniswapRouter {
    return super.attach(address) as TestUniswapRouter;
  }
  override connect(signer: Signer): TestUniswapRouter__factory {
    return super.connect(signer) as TestUniswapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniswapRouterInterface {
    return new utils.Interface(_abi) as TestUniswapRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestUniswapRouter {
    return new Contract(address, _abi, signerOrProvider) as TestUniswapRouter;
  }
}
